steps:
  - group: ":racehorse: Continuous Benchmarks"
    if: build.message !~ /\[skip benchmark\]/ && build.message !~ /\[skip ci\]/ && !build.pull_request.draft
    steps:
      - label: ":running: Benchmark Run (Pull Request)"
        if: build.branch != "main"
        plugins:
          - JuliaCI/julia#v1:
              version: "1"
        agents:
          queue: "juliagpu"
          gpu: "*"
          cuda: "*"
        timeout_in_minutes: 60
        command: |
          git clone --single-branch --branch benchmark-results https://github.com/LuxDL/Lux.jl "../lux-benchmarks";

          cd benchmark;
          mkdir -p trial;

          ls -l ../../lux-benchmarks;
          cp -r "../../lux-benchmarks/" "trial/";

          julia --project --threads=auto --color=yes -e '
            using Pkg;
            Pkg.develop(PackageSpec(path=joinpath(pwd(), "..")));
            Pkg.instantiate();
            include("runbenchmarks.jl")'
        artifact_paths:
          - "benchmark/trial/**"

      # if we will submit results, use the benchmark queue so that we will
      # be running on the same system each time
      - label: ":running: Benchmark Run"
        if: build.branch == "main" || build.tag != null
        plugins:
          - JuliaCI/julia#v1:
              version: "1"
        agents:
          queue: "benchmark"
          gpu: "*"
          cuda: "*"
        timeout_in_minutes: 60
        command: |
          git clone --single-branch --branch benchmark-results https://github.com/LuxDL/Lux.jl "../lux-benchmarks";

          cd benchmark;
          mkdir -p trial;

          ls -l ../../lux-benchmarks;
          cp -r "../../lux-benchmarks/" "trial/";

          julia --project --threads=auto --color=yes -e '
            using Pkg;
            Pkg.develop(PackageSpec(path=joinpath(pwd(), "..")));
            Pkg.instantiate();
            include("runbenchmarks.jl")'
        artifact_paths:
          - "benchmark/trial/**"

      - wait: ~

      - label: ":ship: Upload Benchmark Results"
        agents:
          queue: "juliagpu"
          gpu: "*"
          cuda: "*"
        command: |
          buildkite-agent artifact download "**/*" . --build $BUILDKITE_BUILD_ID
          mv benchmark/trial/* ./
        plugins:
          - datumforge/git-commit#v1.0.1:
              branch: "benchmark-results"
              https: true
              message: "Benchmark Results from Build #${BUILDKITE_BUILD_NUMBER}"
              user:
                name: avik-pal
                email: avikpal@mit.edu

env:
  SECRET_GITHUB_TOKEN: "Mw9x1+DQ5z2B4RHSAn34/7XAmG1UlrqByGX4LctlrPhbfqAefn4F9EcypF3DI4cEIrfRJ8wj//w+XUjHbcqND0iq7nibGrV9lY1hm8OvCrODUnzuh5JvkJMh2JI98M/ykX/O+uCzTb/c5v9CGDvAEYgTds4M3yFpG07zts2yN8DILwGjo7h5vo6rFfze3S3kFVVR9p+Qa+HsFdQ/E0ZJggJts66guIutBnxTdgBlpmF50qU5AedIOqnk0FJ4gPAR0i2woNI21k6IChDLP5+4mU7v3uOzveQxmnT9reLpoNoi+lWXne7zWwX2jZMzRhFv5PsyfNP4RN2D7R9ATf1ETw==;U2FsdGVkX1+Gis41a0wHs50ZATpuUrCXGEtNkQieFC0I79oahuC5Jm01daOCSFEFlbcCcZzSpcgwAi/USisa4w=="
