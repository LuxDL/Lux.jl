import{_ as i,c as s,o as a,a3 as t}from"./chunks/framework.BJHWeAXq.js";const b=JSON.parse('{"title":"Boltz.jl Private API","description":"","frontmatter":{},"headers":[],"relativePath":"api/Domain_Specific_Modeling/Boltz_Private.md","filePath":"api/Domain_Specific_Modeling/Boltz_Private.md","lastUpdated":null}'),e={name:"api/Domain_Specific_Modeling/Boltz_Private.md"},l=t('<h1 id="Boltz.jl-Private-API" tabindex="-1">Boltz.jl Private API <a class="header-anchor" href="#Boltz.jl-Private-API" aria-label="Permalink to &quot;Boltz.jl Private API {#Boltz.jl-Private-API}&quot;">​</a></h1><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Boltz._seconddimmean" href="#Boltz._seconddimmean">#</a> <b><u>Boltz._seconddimmean</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_seconddimmean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Computes the mean of <code>x</code> along dimension <code>2</code></p><p><a href="https://github.com/LuxDL/Boltz.jl/blob/v0.3.9/src/utils.jl#L27-L31" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Boltz._should_type_assert" href="#Boltz._should_type_assert">#</a> <b><u>Boltz._should_type_assert</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_should_type_assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>In certain cases, to ensure type-stability we want to add type-asserts. But this won&#39;t work for exotic types like <code>ForwardDiff.Dual</code>. We use this function to check if we should add a type-assert for <code>x</code>.</p><p><a href="https://github.com/LuxDL/Boltz.jl/blob/v0.3.9/src/utils.jl#L34-L40" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Boltz._fast_chunk" href="#Boltz._fast_chunk">#</a> <b><u>Boltz._fast_chunk</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_fast_chunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{n}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{dim}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type-stable and faster version of <code>MLUtils.chunk</code>.</p><p><a href="https://github.com/LuxDL/Boltz.jl/blob/v0.3.9/src/utils.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Boltz._flatten_spatial" href="#Boltz._flatten_spatial">#</a> <b><u>Boltz._flatten_spatial</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_flatten_spatial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{T, 4}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Flattens the first 2 dimensions of <code>x</code>, and permutes the remaining dimensions to (2, 1, 3)</p><p><a href="https://github.com/LuxDL/Boltz.jl/blob/v0.3.9/src/utils.jl#L18-L22" target="_blank" rel="noreferrer">source</a></p></div><br>',9),o=[l];function r(n,d,p,h,c,k){return a(),s("div",null,o)}const _=i(e,[["render",r]]);export{b as __pageData,_ as default};
