name: Benchmarks

permissions:
  pull-requests: write

on:
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - "ext/**"
      - "test/**"
      - "Project.toml"
      - "bench/**"
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "ext/**"
      - "test/**"
      - "Project.toml"
      - "bench/**"

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
          arch: x64
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Run benchmark
        run: |
          cd bench
          julia --project --threads=4 --color=yes -e '
            using Pkg;
            Pkg.develop(PackageSpec(path=joinpath(pwd(), "..")));
            Pkg.instantiate();
            include("runbenchmarks.jl")'
      - name: Parse & Upload Benchmark Results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Benchmark Results
          tool: 'julia'
          output-file-path: bench/benchmark_results.json
          summary-always: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-always: true
          alert-threshold: "200%"
          fail-on-alert: true
          benchmark-data-dir-path: benchmarks
          auto-push: ${{ github.event_name != 'pull_request' }}

  airspeed-velocity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - uses: julia-actions/cache@v1
      - name: Extract Package Name from Project.toml
        id: extract-package-name
        run: |
          PACKAGE_NAME=$(grep "^name" Project.toml | sed 's/^name = "\(.*\)"$/\1/')
          echo "::set-output name=package_name::$PACKAGE_NAME"
      - name: Build AirspeedVelocity
        env:
          JULIA_NUM_THREADS: 2
        run: |
          # Lightweight build step, as sometimes the runner runs out of memory:
          julia -e 'ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0; import Pkg; Pkg.add("AirspeedVelocity")'
          julia -e 'ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0; import Pkg; Pkg.build("AirspeedVelocity")'
      - name: Add ~/.julia/bin to PATH
        run: |
          echo "$HOME/.julia/bin" >> $GITHUB_PATH
      - name: Run benchmarks
        run: |
          echo $PATH
          ls -l ~/.julia/bin
          mkdir results
          benchpkg ${{ steps.extract-package-name.outputs.package_name }} --rev="${{github.event.repository.default_branch}},${{github.event.pull_request.head.sha}}" -s "bench/asv.jl" --url=${{ github.event.repository.clone_url }} --bench-on="${{github.event.repository.default_branch}}" --output-dir=results/ --tune
      - name: Create plots from benchmarks
        run: |
          mkdir -p plots
          benchpkgplot ${{ steps.extract-package-name.outputs.package_name }} --rev="${{github.event.repository.default_branch}},${{github.event.pull_request.head.sha}}" --npart=10 --format=png --input-dir=results/ --output-dir=plots/
      - name: Upload plot as artifact
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: plots
      - name: Create markdown table from benchmarks
        run: |
          benchpkgtable ${{ steps.extract-package-name.outputs.package_name }} --rev="${{github.event.repository.default_branch}},${{github.event.pull_request.head.sha}}" --input-dir=results/ --ratio > table.md
          echo '### Benchmark Results (ASV)' > body.md
          echo '' >> body.md
          echo '' >> body.md
          cat table.md >> body.md
          echo '' >> body.md
          echo '' >> body.md
          echo '### Benchmark Plots' >> body.md
          echo 'A plot of the benchmark results have been uploaded as an artifact to the workflow run for this PR.' >> body.md
          echo 'Go to "Actions"->"Benchmark a pull request"->[the most recent run]->"Artifacts" (at the bottom).' >> body.md
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fcbenchmark
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Benchmark Results
      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fcbenchmark.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: body.md
          edit-mode: replace
